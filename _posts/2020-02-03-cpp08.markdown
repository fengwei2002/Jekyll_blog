---
layout: post
title: 08 （一些案例的实现）
tags: [cpp+STL]
date: 2020-02-03
---

实现程序时分层实现

## 组装电脑：
***
弄三个零件抽象类 ，实现不同类型的电脑

抽象层，实现层，业务层。

## shape类，几何图形多态
***
抽象一个图形类。打印基本属性 ，得到图形面积  
circle ，square      
写抽象类时要存在一个虚析构函数，保证类的完整性
```cpp
virtual ~shape (){

};
```
## 员工待遇
***
定义抽象类包括工资和基本虚析构函数  
不要在构造函数里面写业务  
当不能根据变量名字得出具体含义时要加注释  

## 企业员工信息管理系统
***


## 如何定义一个数组类型和一个数组指针
***

- 方法一：直接定义一个数组类型  
```typedef int (ARRAY_INT_10)[10];```  
```ARRAY_INT_10 a;```  
```cpp
ARRAY_INT_10 *array_10p;//定义一个指向此类的指针    
ARRAY_INT_10 *array_10p = &array ;
for (int i = 0;i<10;i++){
    (*array_10p)[i]=i+10;
}
```
- 方法二：
```cpp
typedef int (*ARRAY_INT_10)[10]
ARRAY_INT_10_P array_10p = &array;

- 方法三：
int (*p)[10]=&array;
for (int i=0;i<10;i+++){
    cout<<(*p)[i]<<endl;
}
```







