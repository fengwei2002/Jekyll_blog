---
layout: post
title: STL MOOC01
categories: [笔记]
tags: [C++ STL笔记]
date: 2020-02-10
--- 

## string类:

是一个模板类

### string对象的初始化:

- string s1("hello");
- string month ="march"
- string s2(8,'x');//s2里面就有8个x

```cpp
string s;
s = 'n'正确//可以将 字符赋值给string对象
string s='n'错误
```

### 成员函数`s.lenth();`

string 类支持流读取运算符  
string 还支持`getline()函数`

在`<string>`中的`getline`函数有四种重载形式：  

istream& getline (istream&  is, string& str, char delim);  
istream& getline (istream&& is, string& str, char delim);  
istream& getline (istream&  is, string& str);  
istream& getline (istream&& is, string& str);  

函数的变量：  
is    ：表示一个输入流，例如cin。  
str   ：string类型的引用，用来存储输入流中的流信息。  
delim ：char类型的变量，所设置的截断字符；在不自定义设置的情况下，遇到’\n’，则终止输入。  

```cpp
#include<iostream>
using namespace std;
#include<string.h>
int main() {
	string s1 = "qwert";
	cout << s1.length() << endl;;
	cin >> s1;
	cout << s1.length();
	return 0;
}
```

### string的赋值与连接

`string s1("cat"),s2;`
可以使用=赋值两个不同字符串`s2=s1`  
也用`assign`成员函数对字符串赋值,可以实现部分赋值

```cpp
string s1("catpig"),s3;
s3.assign(s1,1,3);
//从s1中下标为1的字符开始复制3个字符给s3;
```

`string` 里面的at成员函数 和 []

```cpp
at会有越界范围检查,下标运算符 [ ] 不做 
 
```

+=操作
成员函数
append();
可以添加一部分
```cpp
```
== > >= < <=

成员函数compare
可以挑其中的一部分进行比较
```cpp

```

子串
成员函数substr(),(常用)

```cpp
string s1("Hello World"),s2;
s2=s1.substr(4,5);//下标开始五个字符
cout<<s2<<endl;
```

o wor

交换string
swap


寻找string中的字符
find();可以规定从哪里开始寻找
返回下标或者
```cpp
```
rfind();
```cpp
```
find_first_of()
```cpp
```
lastof


erase()


replace


insert

c_str适应传统


data


字符串流处理


stl


